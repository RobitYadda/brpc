syntax = "proto3";

import "common.proto";

package dgvse.task;

message VideoInfo{
    int32 Latency = 1; // obsolete
    string Protocol = 2; // udp tcp, default=tcp
    string MaxResolution = 3; // resize default="1920*1080"
    int32 Fps = 4; // default=12
    int32 Thread = 6; // default = 1
    int32 SrcWidth = 7;
    int32 SrcHeight = 8;
    int32 ResizeWidth = 9;
    int32 ResizeSrcHeight = 10;
    int32 SmallImageWidth = 11; // default 480
    int32 SmallImageHeight = 12; // default 320
    uint32 FrameSn = 13;    //当前帧的帧号
    int64 duration = 14;
    int64 frametime = 15;
}

message PlateFeature{
    bool Classify = 1;
    bool Detect = 2;
}

message Feature{
    bool FaceRankerFuse = 1;
    bool Render = 2;
    bool Track = 3;
    bool FaceAttr = 4;
    bool Hotspots = 5;
    bool HotspotsDetect = 6;
    bool DetectHigh = 22;

    bool FaceSecondDetect = 7;
    bool FaceRank = 8;
    bool VehicleSecondDetect = 9;
    bool FaceAlign = 10;
    bool IsFace = 11;
    bool Classify = 12;
    bool Vehicle = 13;
    bool NonMotor = 14;
    bool Face = 15;
    bool Pedestrian = 16;
    bool Style = 17;
    bool Color = 18;
    bool Marker = 19;
    PlateFeature Plate = 20;
    bool NonMotorFeature = 21;
    bool NonMotorPlate = 23;
}

message DetectThreshold{
    float Vehicle = 1;
    float NonMotor = 2;
    float Pedestrian = 3;
    float Face = 4;
}

message ClassifyThreshold{
    float Vehicle = 1;
    float NonMotor = 2;
    float Pedestrian = 3;
    float Face = 4;
    float Plate = 5;
}

message QualityThreshold{
    float Face = 1;
    float MinSizeWidth = 2;
    float MinAlignmentScore = 3;
    float MaxAngleRoll = 4;
    float MaxAngleYaw = 5;
    float MaxAnglePitch = 6;
    float MinBlurScore = 7;
}
message IsFaceThreshold{
    float IsFaceMinSizeWidth = 1;
    float LocalIsFaceThreashold = 2;
    float BlurThreashold = 3;
    float GlobalIsFaceThreashold = 4;
    float GlobalFrontFaceThreashold = 5;
    float YawThreashold = 6;
    float PitchThreashold = 7;
    float MinQuality = 8;
}

message RankerThreshold{
    float MinFuse = 1;
    float MinShow = 2;
}

message HotspotsThreshold{
    float Proportion = 1;
}

message Threshold{
    DetectThreshold Detect = 1;
    ClassifyThreshold Classify = 2;
    QualityThreshold Quality = 3;
    IsFaceThreshold IsFace = 4;
    RankerThreshold Ranker = 5;
    HotspotsThreshold Hotspots = 6;
}

message Track{
    string Version = 1; // v default="track2" f default="track3.2"
    int32 Width =2; // 320 detect 用稍大的小图
    int32 Height = 3; // 240
}

message XY{
    float X = 1 ;
    float Y = 2;
}

message Area{
    repeated XY XYs = 1;
    float FilterThreshold = 2;
}

message Sys{
    int32 VehicleSnapshot = 1;
    int32 NonVehicleSnapshot = 2;
    int32 BufferSize = 3;
    float DetectionInterval = 4;
    int32 DetectionThread = 5;
    int32 DetectionBatchSize = 6;
    float CheckTrackInterval = 7;
    int32 ClassifyThread = 8;
    int32 ClassifyBatchSize = 9;
    int32 AlignThread = 10;
    float ClassifyFirstLatency = 11;
    int32 AlignBatchSize = 12;
    float BufferTTLDelete = 13;
    float BufferTTLClassify = 14;
    float BufferTTLSend = 15;
    float BufferTTLClassifyUpdate = 16;
    bool ClassifyMaxOrNew = 17;
    bool ClassifyOnlyOnce = 18;
    int32 ClassifyTopN = 19;
    bool FuseMaxOrNew = 20;
    int32 TimeOut = 21;
    int32 SendModel = 22;
    int32 DetectionMaxW = 23;
    int32 DetectionMaxH = 28;
    string FaceLv2QulityModel = 24;
    string FaceLv2QulityFunc = 25;
    string GrpcImageEncode = 26;
    int32 LimitTarget = 29;
}

message Font{
    string Type = 1;
    string RightColor = 2;
    int32 LeftSize = 3;
}

message Render{
    bool SnapShot = 1; // 检测出来的侧边栏
    bool AutoRender = 2;
    bool ShowHotSpot = 3;
    int32 SnapWidth = 4; // 多高
    int32 SnapColumn = 5; // 多少
    string RenderStatus = 6;
    int32 SnapBottomHeight = 7;
    int32 Interval = 8; // tracking 产出 间隔 多少帧渲染一次
    Font Font = 9; // default=rc_1.2.3 vsd/res/config_v.json searching keyword: Font
}

message Kafka{
    bool Enable = 1;
    string ProtoVersion = 2;
    bool ImageBindata = 3; // true 则到 kafka
    string Addr = 4;
    bool ImageWeedfs = 5; // 发图片的 url
    bool ThumbImage = 6;
    bool WLImageSize = 7;
    string Topic = 8;
    string ArceeAddr = 9; // 只输出到 Arcee
    string WeedfsAddr = 10; //
    string MaxSourceImage = 11;
    string MaxCutboardImage = 12;
    string ThumbImageSize = 13;
    int32 MaxSizeBytes = 14;
}

message DMI{
    bool Enable = 1;
    string DstAddr = 2;
    string StreamType = 3;
    string Prefix = 4;
    string StreamId = 5; //%s%d
    int32 Speed = 6;
}

message Encoder{
    bool UseGPU = 1;
    string DstPreset = 2;
    string DstFormat = 3;
    int32 DstBitrate = 4;
    int32 DstFps = 5;
    int32 DstGopSize = 6;
    int32 BufferSize = 7;
}

message VideoOutput{
    DMI DMI = 1; // 参考 Example 配置文件
    Encoder Encoder = 2; // 参考 example 配置文件
    //    Vis Vis = 3;  // opengl 本地显示
    //    ShareMem ShareMem = 4; // 输出到 sharemem
}

message TaskConfig {
    string TaskId = 1;
    string TaskName = 2;
    string TaskType = 3;
    bool TaskKeyFrame = 33;
    repeated dg.model.common.Roi rois = 4;
    string http_callback = 5;
    int32 GpuId = 6;
    int32 GpuRes = 8;
    int32 Progress = 7; //任务的执行进度
    int64 BaseTime = 1004;
    int64 StartTime = 1005;
    int64 EndTime = 1006;
    float Speedx = 1007;
    string State = 9;
    string StateDesc = 10;

    dg.model.common.Uri VideoUrl = 14;
    VideoInfo VideoInfo = 30;
    Feature Feature = 15; // 先用默认配置, 未来需要传递
    Threshold Threshold = 16; // 用配置, 写在配置中即可
    Track Track = 17; // track 版本, 参考配置默认
    repeated Area PolygonHotspots = 19;
    Sys Sys = 20; // 配置中的默认值
    Render Render = 21; // 渲染输出配置信息
    VideoOutput VideoOutput = 23;  // Render 的数据决定Video 的输出形式

    map<string, dg.model.common.Uri> image_output = 34;
    dg.model.common.Uri vsd_output = 35;
    dg.model.common.Uri sys_event_output = 36;

    string SensorName = 50;
    string RepoName = 51;
    int32 SensorId = 52;
    int32 RepoId = 53;
    int32 SourceId = 54;
    string DeviceGBid = 55;

    string DmiUrl =  43;

    int64 context = 44;

    string running_time = 45;

}
